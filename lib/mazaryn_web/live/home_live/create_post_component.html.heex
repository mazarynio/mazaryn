<div class="relative">
  <%= if @show_emoji_panel do %>
    <div
      id="emoji-panel-#{@myself}"
      class="absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 bg-gradient-to-br from-white/90 to-gray-100/80 backdrop-blur-2xl rounded-2xl shadow-2xl border-2 border-gradient-to-br from-indigo-400/60 to-purple-400/60 p-4 z-[100] min-w-[300px] max-w-[380px] max-h-[360px] overflow-y-auto animate-[fadeInUp_0.2s_ease-out]"
      style="transform-origin: center; background-image: radial-gradient(circle at center, rgba(99, 102, 241, 0.15) 0%, transparent 70%);"
    >
      <style>
        #emoji-panel-#{@myself}::-webkit-scrollbar {
          width: 6px;
        }
        #emoji-panel-#{@myself}::-webkit-scrollbar-track {
          background: rgba(255, 255, 255, 0.3);
          border-radius: 8px;
        }
        #emoji-panel-#{@myself}::-webkit-scrollbar-thumb {
          background: linear-gradient(to bottom, #6366f1, #a855f7);
          border-radius: 8px;
        }
        #emoji-panel-#{@myself}::-webkit-scrollbar-thumb:hover {
          background: linear-gradient(to bottom, #4f46e5, #9333ea);
        }
      </style>

      <div class="mb-3">
        <h3 class="text-sm font-bold text-gray-900" style="font-family: 'Inter', system-ui, sans-serif;">Choose an Emoji</h3>
        <div class="h-0.5 bg-gradient-to-r from-indigo-500/60 to-purple-500/60 mt-1"></div>
      </div>

      <div class="mb-3">
        <h4 class="text-xs font-bold text-gray-900 mb-1.5 border-b-2 border-gradient-to-r from-indigo-500/60 to-purple-500/60" style="font-family: 'Inter', system-ui, sans-serif;">Faces</h4>
        <div class="grid grid-cols-7 gap-1.5">
          <%= for emoji <- Enum.slice(@emojis, 0, 44) do %>
            <% {key, character} = Enum.at(emoji, 0) %>
            <button
              type="button"
              class="emoji-btn w-10 h-10 bg-white/70 hover:bg-gradient-to-br hover:from-indigo-300/90 hover:to-purple-300/90 rounded-lg text-xl transition-all duration-200 flex items-center justify-center group relative hover:scale-110 hover:shadow-lg hover:ring-2 hover:ring-indigo-400/40 border border-gray-100/50"
              phx-click="select_emoji"
              phx-value-emoji={character}
              phx-target={@myself}
              title={to_string(key)}
            >
              <%= character %>
              <div class="absolute -top-9 left-1/2 transform -translate-x-1/2 px-2.5 py-1 bg-gradient-to-br from-gray-900/95 to-gray-800/95 text-white text-sm rounded-lg shadow-md opacity-0 group-hover:opacity-100 transition-all duration-200 pointer-events-none whitespace-nowrap z-[101] animate-[fadeInUp_0.2s_ease-out]" style="font-family: 'Inter', system-ui, sans-serif;">
                <%= to_string(key) |> String.replace("_", " ") %>
              </div>
            </button>
          <% end %>
        </div>
      </div>

      <div class="mb-3">
        <h4 class="text-xs font-bold text-gray-900 mb-1.5 border-b-2 border-gradient-to-r from-indigo-500/60 to-purple-500/60" style="font-family: 'Inter', system-ui, sans-serif;">Gestures</h4>
        <div class="grid grid-cols-7 gap-1.5">
          <%= for emoji <- Enum.slice(@emojis, 44, 9) do %>
            <% {key, character} = Enum.at(emoji, 0) %>
            <button
              type="button"
              class="emoji-btn w-10 h-10 bg-white/70 hover:bg-gradient-to-br hover:from-indigo-300/90 hover:to-purple-300/90 rounded-lg text-xl transition-all duration-200 flex items-center justify-center group relative hover:scale-110 hover:shadow-lg hover:ring-2 hover:ring-indigo-400/40 border border-gray-100/50"
              phx-click="select_emoji"
              phx-value-emoji={character}
              phx-target={@myself}
              title={to_string(key)}
            >
              <%= character %>
              <div class="absolute -top-9 left-1/2 transform -translate-x-1/2 px-2.5 py-1 bg-gradient-to-br from-gray-900/95 to-gray-800/95 text-white text-sm rounded-lg shadow-md opacity-0 group-hover:opacity-100 transition-all duration-200 pointer-events-none whitespace-nowrap z-[101] animate-[fadeInUp_0.2s_ease-out]" style="font-family: 'Inter', system-ui, sans-serif;">
                <%= to_string(key) |> String.replace("_", " ") %>
              </div>
            </button>
          <% end %>
        </div>
      </div>

      <div class="mb-3">
        <h4 class="text-xs font-bold text-gray-900 mb-1.5 border-b-2 border-gradient-to-r from-indigo-500/60 to-purple-500/60" style="font-family: 'Inter', system-ui, sans-serif;">Objects</h4>
        <div class="grid grid-cols-7 gap-1.5">
          <%= for emoji <- Enum.slice(@emojis, 53, 9) do %>
            <% {key, character} = Enum.at(emoji, 0) %>
            <button
              type="button"
              class="emoji-btn w-10 h-10 bg-white/70 hover:bg-gradient-to-br hover:from-indigo-300/90 hover:to-purple-300/90 rounded-lg text-xl transition-all duration-200 flex items-center justify-center group relative hover:scale-110 hover:shadow-lg hover:ring-2 hover:ring-indigo-400/40 border border-gray-100/50"
              phx-click="select_emoji"
              phx-value-emoji={character}
              phx-target={@myself}
              title={to_string(key)}
            >
              <%= character %>
              <div class="absolute -top-9 left-1/2 transform -translate-x-1/2 px-2.5 py-1 bg-gradient-to-br from-gray-900/95 to-gray-800/95 text-white text-sm rounded-lg shadow-md opacity-0 group-hover:opacity-100 transition-all duration-200 pointer-events-none whitespace-nowrap z-[101] animate-[fadeInUp_0.2s_ease-out]" style="font-family: 'Inter', system-ui, sans-serif;">
                <%= to_string(key) |> String.replace("_", " ") %>
              </div>
            </button>
          <% end %>
        </div>
      </div>

      <div class="mb-3">
        <h4 class="text-xs font-bold text-gray-900 mb-1.5 border-b-2 border-gradient-to-r from-indigo-500/60 to-purple-500/60" style="font-family: 'Inter', system-ui, sans-serif;">Animals</h4>
        <div class="grid grid-cols-7 gap-1.5">
          <%= for emoji <- Enum.slice(@emojis, 62, 8) do %>
            <% {key, character} = Enum.at(emoji, 0) %>
            <button
              type="button"
              class="emoji-btn w-10 h-10 bg-white/70 hover:bg-gradient-to-br hover:from-indigo-300/90 hover:to-purple-300/90 rounded-lg text-xl transition-all duration-200 flex items-center justify-center group relative hover:scale-110 hover:shadow-lg hover:ring-2 hover:ring-indigo-400/40 border border-gray-100/50"
              phx-click="select_emoji"
              phx-value-emoji={character}
              phx-target={@myself}
              title={to_string(key)}
            >
              <%= character %>
              <div class="absolute -top-9 left-1/2 transform -translate-x-1/2 px-2.5 py-1 bg-gradient-to-br from-gray-900/95 to-gray-800/95 text-white text-sm rounded-lg shadow-md opacity-0 group-hover:opacity-100 transition-all duration-200 pointer-events-none whitespace-nowrap z-[101] animate-[fadeInUp_0.2s_ease-out]" style="font-family: 'Inter', system-ui, sans-serif;">
                <%= to_string(key) |> String.replace("_", " ") %>
              </div>
            </button>
          <% end %>
        </div>
      </div>

      <div>
        <h4 class="text-xs font-bold text-gray-900 mb-1.5 border-b-2 border-gradient-to-r from-indigo-500/60 to-purple-500/60" style="font-family: 'Inter', system-ui, sans-serif;">Symbols & Food</h4>
        <div class="grid grid-cols-7 gap-1.5">
          <%= for emoji <- Enum.slice(@emojis, 70, 30) do %>
            <% {key, character} = Enum.at(emoji, 0) %>
            <button
              type="button"
              class="emoji-btn w-10 h-10 bg-white/70 hover:bg-gradient-to-br hover:from-indigo-300/90 hover:to-purple-300/90 rounded-lg text-xl transition-all duration-200 flex items-center justify-center group relative hover:scale-110 hover:shadow-lg hover:ring-2 hover:ring-indigo-400/40 border border-gray-100/50"
              phx-click="select_emoji"
              phx-value-emoji={character}
              phx-target={@myself}
              title={to_string(key)}
            >
              <%= character %>
              <div class="absolute -top-9 left-1/2 transform -translate-x-1/2 px-2.5 py-1 bg-gradient-to-br from-gray-900/95 to-gray-800/95 text-white text-sm rounded-lg shadow-md opacity-0 group-hover:opacity-100 transition-all duration-200 pointer-events-none whitespace-nowrap z-[101] animate-[fadeInUp_0.2s_ease-out]" style="font-family: 'Inter', system-ui, sans-serif;">
                <%= to_string(key) |> String.replace("_", " ") %>
              </div>
            </button>
          <% end %>
        </div>
      </div>
    </div>
  <% end %>

  <div class="relative backdrop-blur-xl bg-gradient-to-br from-white/90 via-white/80 to-white/70 border border-white/20 rounded-3xl shadow-2xl shadow-indigo-100/50 p-8 max-w-2xl mx-auto overflow-hidden">
    <div class="absolute top-0 left-0 w-full h-full overflow-hidden rounded-3xl">
      <div class="absolute -top-4 -right-4 w-24 h-24 bg-gradient-to-br from-indigo-400/20 to-purple-400/20 rounded-full blur-xl animate-pulse"></div>
      <div class="absolute -bottom-4 -left-4 w-32 h-32 bg-gradient-to-br from-blue-400/20 to-cyan-400/20 rounded-full blur-xl animate-pulse" style="animation-delay: 1s;"></div>
    </div>

    <.form
      :let={f}
      for={@changeset}
      phx-change="validate-post"
      phx-submit="save-post"
      phx-target={@myself}
      multipart
      class="relative z-10 space-y-6"
    >
      <div class="flex items-start space-x-5">
        <div class="relative">
          <div class="absolute inset-0 bg-gradient-to-br from-indigo-500 to-purple-600 rounded-full blur-md opacity-60 animate-pulse"></div>
          <img
            src={Helper.handle_avatar(@user)}
            class="relative h-14 w-14 rounded-full object-cover border-3 border-white shadow-xl ring-4 ring-indigo-100/50"
            alt="User avatar"
          />
          <div class="absolute -bottom-1 -right-1 w-5 h-5 bg-gradient-to-br from-green-400 to-emerald-500 rounded-full border-2 border-white shadow-lg"></div>
        </div>

        <div class="flex-1 min-w-0">
          <%= textarea(
            f,
            :content,
            class: "w-full border-0 resize-none focus:ring-0 text-gray-800 placeholder-gray-400 text-lg leading-relaxed bg-transparent p-0 font-medium selection:bg-indigo-100",
            placeholder: "Share something amazing...",
            rows: "4",
            style: "min-height: 80px; font-family: 'Inter', system-ui, sans-serif;",
            phx_debounce: "300",
            id: "post-content-#{@myself}"
          ) %>

          <div class="flex justify-between items-center mt-3">
            <div class="text-xs text-gray-400 font-medium">
              <span id="char-count-#{@myself}">0 characters</span>
            </div>
            <div class="flex items-center space-x-2">
              <div class="w-8 h-1 bg-gray-200 rounded-full overflow-hidden">
                <div id="char-progress-#{@myself}" class="h-full bg-gradient-to-r from-indigo-500 to-purple-500 rounded-full transition-all duration-300" style="width: 0%"></div>
              </div>
              <span class="text-xs text-gray-500 font-medium">280</span>
            </div>
          </div>
        </div>
      </div>

      <%= if @uploads.media.errors != [] do %>
        <div class="relative">
          <div class="absolute inset-0 bg-gradient-to-r from-red-500/10 to-pink-500/10 rounded-2xl blur-sm"></div>
          <div class="relative bg-white/80 backdrop-blur-sm border border-red-200/50 rounded-2xl p-4 space-y-2">
            <%= for {_ref, msg} <- @uploads.media.errors do %>
              <div class="flex items-center space-x-3">
                <div class="w-6 h-6 bg-gradient-to-br from-red-500 to-pink-500 rounded-full flex items-center justify-center flex-shrink-0">
                  <svg class="h-3 w-3 text-white" fill="currentColor" viewBox="0 0 20 20">
                    <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clip-rule="evenodd" />
                  </svg>
                </div>
                <p class="text-sm text-red-600 font-medium"><%= Phoenix.Naming.humanize(msg) %></p>
              </div>
            <% end %>
          </div>
        </div>
      <% end %>

      <%= if @uploads.media.entries != [] do %>
        <div class="relative">
          <div class="absolute inset-0 bg-gradient-to-br from-indigo-500/5 to-purple-500/5 rounded-3xl blur-sm"></div>
          <div class="relative bg-white/60 backdrop-blur-md border border-white/30 rounded-3xl p-6">
            <h3 class="text-sm font-semibold text-gray-700 mb-4 flex items-center">
              <svg class="w-4 h-4 mr-2 text-indigo-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z" />
              </svg>
              Media Attachments
            </h3>

            <div class="grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 gap-4">
              <%= for entry <- @uploads.media.entries do %>
                <div class="relative group">
                  <div class="relative aspect-square bg-gradient-to-br from-gray-100 to-gray-200 rounded-2xl overflow-hidden shadow-lg ring-1 ring-gray-200/50">
                    <.live_img_preview entry={entry} class="w-full h-full object-cover transition-transform duration-300 group-hover:scale-105" />

                    <div class="absolute inset-0 bg-gradient-to-t from-black/20 via-transparent to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300"></div>

                    <button
                      type="button"
                      class="absolute top-2 right-2 w-8 h-8 bg-black/60 hover:bg-black/80 backdrop-blur-sm text-white rounded-full flex items-center justify-center shadow-lg transition-all duration-200 opacity-0 group-hover:opacity-100 hover:scale-110"
                      phx-click="cancel-entry"
                      phx-value-ref={entry.ref}
                      phx-target={@myself}
                    >
                      <svg class="h-4 w-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                      </svg>
                    </button>
                  </div>

                  <div class="mt-3 px-1">
                    <div class="flex items-center justify-between text-xs text-gray-500 mb-1">
                      <span class="font-medium">Uploading...</span>
                      <span><%= entry.progress %>%</span>
                    </div>
                    <div class="w-full h-1.5 bg-gray-200 rounded-full overflow-hidden">
                      <div
                        class="h-full bg-gradient-to-r from-indigo-500 via-purple-500 to-pink-500 rounded-full transition-all duration-500 ease-out"
                        style={"width: #{entry.progress}%"}
                      ></div>
                    </div>
                  </div>
                </div>
              <% end %>
            </div>
          </div>
        </div>
      <% end %>

      <div class="flex items-center justify-between pt-6 border-t border-gradient-to-r from-transparent via-gray-200/50 to-transparent">
        <div class="flex items-center space-x-2">
          
          <div class="relative" id="emoji-container-#{@myself}">
            <button
              type="button"
              id="emoji-button-#{@myself}"
              phx-click="toggle_emoji_panel"
              phx-target={@myself}
              class="emoji-toggle-btn group relative w-11 h-11 bg-gradient-to-br from-yellow-400/20 to-orange-400/20 hover:from-yellow-400/30 hover:to-orange-400/30 rounded-2xl flex items-center justify-center transition-all duration-300 hover:scale-105 border border-yellow-200/50"
              title="Add emoji"
            >
              <svg class="h-5 w-5 text-yellow-600 group-hover:text-yellow-700 transition-colors" fill="currentColor" viewBox="0 0 20 20">
                <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM7 9a1 1 0 100-2 1 1 0 000 2zm7-1a1 1 0 11-2 0 1 1 0 012 0zm-.464 5.535a1 1 0 10-1.415-1.414 3 3 0 01-4.242 0 1 1 0 00-1.415 1.414 5 5 0 007.072 0z" clip-rule="evenodd" />
              </svg>

              <div class="absolute -top-10 left-1/2 transform -translate-x-1/2 px-2.5 py-1 bg-gradient-to-br from-gray-900/95 to-gray-800/95 text-white text-sm rounded-lg shadow-md opacity-0 group-hover:opacity-100 transition-all duration-200 pointer-events-none" style="font-family: 'Inter', system-ui, sans-serif;">
                Emoji
              </div>
            </button>
          </div>

          <div class="relative group">
            <button
              type="button"
              class="relative w-11 h-11 bg-gradient-to-br from-indigo-400/20 to-purple-400/20 hover:from-indigo-400/30 hover:to-purple-400/30 rounded-2xl flex items-center justify-center transition-all duration-300 hover:scale-105 border border-indigo-200/50"
              phx-click={Phoenix.LiveView.JS.dispatch("click", to: "##{@uploads.media.ref}", bubbles: false)}
              title="Add media"
            >
              <svg class="h-5 w-5 text-indigo-600 group-hover:text-indigo-700 transition-colors" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z" />
              </svg>

              <div class="absolute -top-10 left-1/2 transform -translate-x-1/2 px-2.5 py-1 bg-gradient-to-br from-gray-900/95 to-gray-800/95 text-white text-sm rounded-lg shadow-md opacity-0 group-hover:opacity-100 transition-all duration-200 pointer-events-none" style="font-family: 'Inter', system-ui, sans-serif;">
                Media
              </div>
            </button>
            <.live_file_input
              upload={@uploads.media}
              class="hidden"
              phx-drop-target={@uploads.media.ref}
            />
          </div>

          <div class="relative group">
            <%= live_component(SelectLive,
              id: "privacy-select",
              f: f,
              name: :privacy,
              options: ["public", "private", "only me"],
              class: "w-11 h-11 bg-gradient-to-br from-gray-100/80 to-gray-200/80 hover:from-gray-200/80 hover:to-gray-300/80 rounded-2xl border border-gray-200/50 text-gray-600 text-sm transition-all duration-300 hover:scale-105 cursor-pointer"
            ) %>

            <div class="absolute -top-10 left-1/2 transform -translate-x-1/2 px-2.5 py-1 bg-gradient-to-br from-gray-900/95 to-gray-800/95 text-white text-sm rounded-lg shadow-md opacity-0 group-hover:opacity-100 transition-all duration-200 pointer-events-none" style="font-family: 'Inter', system-ui, sans-serif;">
              Privacy
            </div>
          </div>
        </div>

        <div class="flex items-center space-x-4">
          <%= submit(
            class: "group relative inline-flex items-center px-8 py-3 bg-gradient-to-r from-indigo-600 via-purple-600 to-pink-600 hover:from-indigo-700 hover:via-purple-700 hover:to-pink-700 text-white font-semibold rounded-2xl shadow-lg shadow-indigo-500/25 hover:shadow-xl hover:shadow-indigo-500/40 transition-all duration-300 hover:scale-105 border border-indigo-500/20 disabled:opacity-50 disabled:cursor-not-allowed disabled:hover:scale-100",
            phx_disable_with: "Publishing..."
          ) do %>
            <div class="absolute inset-0 bg-gradient-to-r from-indigo-600 via-purple-600 to-pink-600 rounded-2xl blur-lg opacity-30 group-hover:opacity-50 transition-opacity duration-300"></div>

            <div class="relative flex items-center">
              <svg class="h-4 w-4 mr-2 transition-transform duration-300 group-hover:rotate-12" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 19l9 2-9-18-9 18 9-2zm0 0v-8" />
              </svg>
              <span>Publish</span>
            </div>
          <% end %>
        </div>
      </div>
    </.form>
  </div>

  <script>
    document.addEventListener('DOMContentLoaded', function() {
      const textareas = document.querySelectorAll('[id^="post-content-"]');
      textareas.forEach(textarea => {
        const componentId = textarea.id.replace('post-content-', '');
        const charCount = document.getElementById('char-count-' + componentId);
        const charProgress = document.getElementById('char-progress-' + componentId);

        textarea.addEventListener('input', function() {
          updateCharCount(textarea, charCount, charProgress);
        });

        updateCharCount(textarea, charCount, charProgress);
      });

      window.addEventListener('phx:insert_emoji', function(event) {
        const { emoji, component_id } = event.detail;
        const textarea = document.getElementById('post-content-' + component_id);
        const charCount = document.getElementById('char-count-' + component_id);
        const charProgress = document.getElementById('char-progress-' + component_id);

        if (textarea) {
          const start = textarea.selectionStart;
          const end = textarea.selectionEnd;
          const text = textarea.value;

          textarea.value = text.substring(0, start) + emoji + text.substring(end);
          textarea.focus();
          textarea.setSelectionRange(start + emoji.length, start + emoji.length);

          textarea.dispatchEvent(new Event('input', { bubbles: true }));

          updateCharCount(textarea, charCount, charProgress);
        }
      });

      const emojiPanels = document.querySelectorAll('[id^="emoji-panel-"]');
      emojiPanels.forEach(panel => {
        panel.addEventListener('animationend', () => {
          panel.style.animation = '';
        });
      });
    });

    function updateCharCount(textarea, charCount, charProgress) {
      if (!textarea || !charCount || !charProgress) return;

      const count = textarea.value.length;
      const maxChars = 280;
      const percentage = (count / maxChars) * 100;

      charCount.textContent = count + ' characters';
      charProgress.style.width = Math.min(percentage, 100) + '%';

      if (count > maxChars) {
        charCount.classList.add('text-red-500');
        charProgress.classList.remove('bg-gradient-to-r', 'from-indigo-500', 'to-purple-500');
        charProgress.classList.add('bg-red-500');
      } else {
        charCount.classList.remove('text-red-500');
        charProgress.classList.remove('bg-red-500');
        charProgress.classList.add('bg-gradient-to-r', 'from-indigo-500', 'to-purple-500');
      }
    }

    if (!document.getElementById('emoji-animations')) {
      const style = document.createElement('style');
      style.id = 'emoji-animations';
      style.textContent = `
        @keyframes fadeInUp {
          from {
            opacity: 0;
            transform: translateY(10px) scale(0.95);
          }
          to {
            opacity: 1;
            transform: translateY(0) scale(1);
          }
        }

        @keyframes fadeOutDown {
          from {
            opacity: 1;
            transform: translateY(0) scale(1);
          }
          to {
            opacity: 0;
            transform: translateY(10px) scale(0.95);
          }
        }
      `;
      document.head.appendChild(style);
    }
  </script>
</div>